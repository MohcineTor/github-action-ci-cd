# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application Flask CI/CD 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

env:
  REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
  REGISTRY_PASS: ${{ secrets.DOCKER_PASSWORD }}
  IMAGE_NAME: dockermohcine/test-app
  IMAGE_TAG: v4

jobs: 
  test-and-build-ubuntu:
      runs-on: ubuntu-20.04
      steps: 
        - name: Checkout Code 
          uses: actions/checkout@v3

        - name: Sey up python
          uses: actions/setup-python@v3
          with:
            python-version: "3.9"

        - name: Install Make 
          run: sudo apt-get update && sudo apt-get install make 

        - name: Create env Virtual && Run Testes 
          run: make venv && make test

        - uses: mr-smithers-excellent/docker-build-push@v6
          name: Build & push Docker image
          with:
            #image: dockermohcine/test-app
            #tags: v1
            # username: ${{ secrets.DOCKER_USERNAME }}
            # password: ${{ secrets.DOCKER_PASSWORD }}
            image: ${{ env.IMAGE_NAME }}
            tags: ${{ env.IMAGE_TAG }}
            registry: docker.io
            username: ${{ env.REGISTRY_USER }}
            password: ${{ env.REGISTRY_PASS }}
        - name: Print Public IP
          run: |
            echo ${{ steps.ip.outputs.ipv4 }}

        - name: Deploy to server
          run: |
            docker login -u ${{ env.REGISTRY_USER }} -p ${{ env.REGISTRY_PASS }}
            docker ps -aq | xargs docker stop
            docker ps -aq | xargs docker rm
            docker run -d -p 5000:5000 "${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}"
